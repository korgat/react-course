{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPost/MyPost.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/MyPost/MyPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ContactsForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","MyPost","props","className","s","src","alt","message","maxLength15","maxLengthCreator","Textarea","FormComponentCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","name","cols","rows","MyPosts","postItems","profilePage","postData","map","m","myPosts","InputArea","e","AddPost","NewPostData","postsArea","MyPostsContainer","connect","state","dispatch","addPostCreator","ProfileStatusHooks","useState","editMode","setEditMode","status","userStatus","setUserStatus","useEffect","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","Input","ReduxContactsForm","placeholder","type","Object","keys","profile","contacts","key","ProfileInfo","React","memo","wallpaper","descriptionArea","photos","large","defaultImg","isOwner","target","files","length","uploadPhoto","onClick","initialValues","formData","updateProfileData","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","userId","Contacts","Profile","EditingProfData","compose","auth","getProfile","getStatus","withRouter","withAuthRedirect","match","params"],"mappings":"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","file":"static/js/3.b2398e39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallpaper\":\"ProfileInfo_wallpaper__ThV06\",\"descriptionArea\":\"ProfileInfo_descriptionArea__1y9wB\",\"avatarImg\":\"ProfileInfo_avatarImg__25Gtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPost\":\"MyPost_MyPost__KW8R7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3lEHH\",\"InputArea\":\"MyPosts_InputArea__2FlrC\",\"postsArea\":\"MyPosts_postsArea__1dmBj\"};","import s from \"./MyPost.module.css\"\r\n\r\nconst MyPost = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.MyPost}>\r\n\t\t\t<div>\r\n\t\t\t\t<img src=\"https://www.4dface.io/wp-content/uploads/2018/10/4DFM_sample2.jpg\" alt=\"\" />\r\n\t\t\t\t<span>{props.message}</span>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPost","\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { FormComponentCreator } from \"../../../common/loaders/formControls/FormControls\"\r\nimport { maxLengthCreator, required } from \"../../utils/validators\"\r\nimport MyPost from \"./MyPost/MyPost\"\r\nimport s from \"./MyPosts.module.css\"\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\tlet postItems = props.profilePage.postData.map(m => <MyPost message={m.message} />)\r\n\r\n\tlet addPost = (e) => {\r\n\t\tprops.AddPost(e.NewPostData)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.myPosts}>\r\n\t\t\t<div className={s.InputArea}>\r\n\t\t\t\t<NewPostFormRedux onSubmit={addPost} />\r\n\t\t\t</div>\r\n\t\t\t<div className={s.postsArea}>\r\n\t\t\t\t{postItems}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nlet maxLength15 = maxLengthCreator(15)\r\n\r\nconst Textarea = FormComponentCreator(\"textarea\")\r\n\r\nconst NewPostForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field validate={[required, maxLength15]} component={Textarea} name=\"NewPostData\" cols=\"30\" rows=\"10\" ></Field>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button >Add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet NewPostFormRedux = reduxForm({ form: \"newPost\" })(NewPostForm)\r\n\r\nexport default MyPosts","\r\nimport { connect } from \"react-redux\"\r\nimport { addPostCreator } from \"../../../store/profileReducer\"\r\n\r\nimport MyPosts from \"./MyPosts\"\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprofilePage: state.profilePage\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tAddPost: (postData) => {\r\n\t\t\tdispatch(addPostCreator(postData))\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React, { useEffect, useState } from \"react\"\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\tlet [userStatus, setUserStatus] = useState(props.status)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetUserStatus(props.status)\r\n\t}, [props.status])\r\n\r\n\tconst editStatus = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\tconst confirmStatus = () => {\r\n\t\tsetEditMode(false)\r\n\t\tprops.updateStatus(userStatus)\r\n\t}\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetUserStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{editMode ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} onBlur={confirmStatus} value={userStatus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t: <div onDoubleClick={editStatus} >\r\n\t\t\t\t\t{props.status ? props.status : \"no status\"}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusHooks","import React, { useState } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport Contacts from \"./ProfileInfo\"\r\nimport { FormComponentCreator } from \"../../../common/loaders/formControls/FormControls\"\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\"\r\n\r\n\r\nconst Input = FormComponentCreator(\"input\")\r\nconst Textarea = FormComponentCreator(\"textarea\")\r\n\r\nconst ContactsForm = (props) => {\r\n\treturn <form onSubmit={props.handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<b>Full name</b>:<Field component={Input} name={\"fullName\"} placeholder={\"fullName\"} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>About me</b>:<Field component={Textarea} name={\"aboutMe\"} placeholder={\"aboutMe\"} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Looking for a job</b>:<Field component={Input} name={\"lookingForAJob\"} type={\"checkbox\"} />\r\n\t\t</div >\r\n\t\t<div>\r\n\t\t\t<b>Professional skills </b>:<Field component={Textarea} name={\"lookingForAJobDescription\"} placeholder={\"lookingForAJobDescription\"} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{Object.keys(props.profile.contacts).map(key =>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{key}:<Field component={Input} name={\"contacts.\" + key} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<button>Submit</button>\r\n\t</form >\r\n}\r\n\r\nconst ReduxContactsForm = reduxForm({ form: \"ProfileData\" })(ContactsForm)\r\n\r\nexport default ReduxContactsForm","import React, { useState } from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport defaultImg from \"../../../assets/images/user.png\"\r\nimport ReduxContactsForm from \"./ContactsForm\"\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\"\r\n\r\nconst ProfileInfo = React.memo(props => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false)\r\n\r\n\tif (!props.profile) {\r\n\t\treturn <div>empty</div>\r\n\t}\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.uploadPhoto(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tconst onEditClick = () => {\r\n\t\teditMode ? setEditMode(false) : setEditMode(true)\r\n\t}\r\n\tconst onSubmit = (formData) => {\r\n\t\tdebugger\r\n\t\tprops.updateProfileData(formData)\r\n\t\tsetEditMode(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.ProfileInfo}>\r\n\t\t\t<div>\r\n\t\t\t\t<img className={s.wallpaper} src=\"https://www.pics4learning.com/images/pics-banner1-1300.jpg\" alt=\"proFileImage\"></img>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.descriptionArea}>\r\n\t\t\t\t<div><img src={props.profile.photos.large ? props.profile.photos.large : defaultImg} alt=\"\" /></div>\r\n\t\t\t\t{props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} ></input>}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={onEditClick}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!editMode ? <div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<b>Full name</b>:{props.profile.fullName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<b>About me</b>:{props.profile.aboutMe}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t< div >\r\n\t\t\t\t\t\t<b>Looking for a job</b>:{props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<b>Professional skills </b>:{props.profile.lookingForAJobDescription}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Object.keys(props.profile.contacts).map(key => <Contacts contactTitle={key} contactValue={props.profile.contacts[key]} />)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t\t\t<div>{props.profile.userId}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t: <ReduxContactsForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile} />}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n})\r\n\r\nexport const Contacts = ({ contactTitle, contactValue }) => {\r\n\treturn <div>\r\n\t\t<b>{contactTitle}</b>:{contactValue}\r\n\t</div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo","\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tisOwner={props.isOwner} EditingProfData={props.profilePage.EditingProfData}\r\n\t\t\t\tprofile={props.profilePage.profile} status={props.profilePage.status}\r\n\t\t\t\tupdateStatus={props.updateStatus} uploadPhoto={props.uploadPhoto}\r\n\t\t\t\tupdateProfileData={props.updateProfileData} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</main>\r\n\t)\r\n}\r\n\r\nexport default Profile","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Profile from \"./Profile\"\r\nimport { getProfile, getStatus, updateProfileData, updateStatus, uploadPhoto } from \"../../store/profileReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tlet userId = props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = props.userId\r\n\t\t}\r\n\t\tprops.getProfile(userId)\r\n\t\tprops.getStatus(userId)\r\n\t}, [props.match.params.userId])\r\n\r\n\treturn <main>\r\n\t\t<Profile {...props} isOwner={!props.match.params.userId} />\r\n\t</main>\r\n\r\n}\r\n\r\n\r\n// class ProfileContainer extends React.Component {\r\n// \trefreshProfile() {\r\n// \t\tlet userId = this.props.match.params.userId\r\n// \t\tif (!userId) {\r\n// \t\t\tuserId = this.props.userId\r\n// \t\t}\r\n// \t\tthis.props.getProfile(userId)\r\n// \t\tthis.props.getStatus(userId)\r\n// \t}\r\n// \tcomponentDidMount() {\r\n// \t\tthis.refreshProfile()\r\n// \t}\r\n// \tcomponentDidUpdate(prevProps) {\r\n// \t\tdebugger\r\n// \t\tif (this.props.match.params.userId !== prevProps.match.params.userId)\r\n// \t\t\tthis.refreshProfile()\r\n// \t}\r\n\r\n\r\n// \trender() {\r\n// \t\treturn <main>\r\n// \t\t\t<Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n// \t\t</main>\r\n// \t}\r\n// }\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofilePage: state.profilePage,\r\n\tuserId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getProfile, getStatus, updateStatus, uploadPhoto, updateProfileData }),\r\n\twithRouter,\r\n\twithAuthRedirect)(ProfileContainer)\r\n"],"sourceRoot":""}